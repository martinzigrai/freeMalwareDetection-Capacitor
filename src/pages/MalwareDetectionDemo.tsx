import * as React from 'react';
import TalsecLogo from '../assets/talsec-logo.png';
import './MalwareDetectionDemo.css';
import '../theme/variables.css';
import { IonHeader, IonImg, IonTitle, IonToolbar } from '@ionic/react';

import { SuspiciousAppInfo, addToWhitelist } from 'capacitor-freerasp';
import { useEffect } from 'react';
import { Capacitor } from '@capacitor/core';
import MalwareModal from '../components/MalwareModal';

const MalwareDetectionDemo: React.FC<{
  suspiciousApps: SuspiciousAppInfo[];
}> = ({ suspiciousApps }) => {
  useEffect(() => {
    (async () => {
      Capacitor.getPlatform() === 'android' &&
        (await addItemsToMalwareWhitelist());
    })();
  }, []);

  const addItemsToMalwareWhitelist = async () => {
    const appsToWhitelist = ['io.ionic.starter', 'com.example.myApp'];
    await Promise.all(
      appsToWhitelist.map(async app => {
        try {
          const whitelistResponse = await addToWhitelist(app);
          // eslint-disable-next-line no-console
          console.info(
            `${app} stored to Malware Whitelist: ${whitelistResponse}`,
          );
        } catch (error) {
          // eslint-disable-next-line no-console
          console.info('Malware whitelist failed: ', error);
        }
      }),
    );
  };

  return (
    <>
      <IonHeader>
        <IonToolbar>
          <IonTitle>Malware Demo Capacitor</IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonImg className="talsecLogo" src={TalsecLogo} alt="Talsec logo" />
      <MalwareModal suspiciousApps={suspiciousApps} />
    </>
  );
};

export default MalwareDetectionDemo;
