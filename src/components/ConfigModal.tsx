import React from 'react';
import {
  IonModal,
  IonContent,
  IonHeader,
  IonToolbar,
  IonTitle,
  IonButton,
  IonList,
  IonItem,
  IonLabel,
  IonText,
} from '@ionic/react';
import { config } from '../malwareDetection.config';
import './ConfigModal.css';

const ConfigModal: React.FC<{
  visible: boolean;
  onClose: () => void;
}> = ({ visible, onClose }) => {
  return (
    <IonModal isOpen={visible} className="modal-container">
      <IonHeader>
        <IonToolbar>
          <IonTitle>Malware Configuration</IonTitle>
        </IonToolbar>
      </IonHeader>

      <IonContent className="modal-content">
        <IonList lines="none" className="modal-list">
          <IonItem className="option-container">
            <IonLabel className="option-title">Blocklisted Hashes:</IonLabel>
          </IonItem>
          {config.androidConfig.malwareConfig.blacklistedHashes.map(
            (hash: string, index: number) => (
              <IonItem key={index} className="option-text">
                <IonText>{hash}</IonText>
              </IonItem>
            ),
          )}

          <IonItem className="option-container">
            <IonLabel className="option-title">
              Blocklisted Package Names:
            </IonLabel>
          </IonItem>
          {config.androidConfig.malwareConfig.blacklistedPackageNames.map(
            (packageName: string, index: number) => (
              <IonItem key={index} className="option-text">
                <IonText>{packageName}</IonText>
              </IonItem>
            ),
          )}

          <IonItem className="option-container">
            <IonLabel className="option-title">
              Blocklisted Permissions:
            </IonLabel>
          </IonItem>
          <div className="option-text-extra">
            {config.androidConfig.malwareConfig.suspiciousPermissions.map(
              (permissionGroup: string[]) => (
                <>
                  <p>{'['}</p>
                  {permissionGroup.map((permission, permIndex) => (
                    <>
                      <p key={permIndex} className="option-text">
                        {permission},
                      </p>
                    </>
                  ))}
                  <IonText>{'],'}</IonText>
                </>
              ),
            )}
          </div>
          <IonItem className="option-container">
            <IonLabel className="option-title">
              Whitelisted Installation Sources:
            </IonLabel>
          </IonItem>
          {config.androidConfig.malwareConfig.whitelistedInstallationSources.map(
            (source, index) => (
              <IonItem key={index} className="option-text">
                <IonText>{source}</IonText>
              </IonItem>
            ),
          )}
        </IonList>
      </IonContent>
      <div className="button-container">
        <IonButton onClick={onClose}>Close</IonButton>
      </div>
    </IonModal>
  );
};

export default ConfigModal;
